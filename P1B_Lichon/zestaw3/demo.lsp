;Tomasz Lichon

(load "1.lsp")
(load "2.lsp")

(defun demo (&optional n)
	(cond
		((null n)
			(print "zestaw 3 zadanie 1 i 2")
		)
		((= n 11)
			(MY-WHEN (EQ 5 5) (PRINT 5) (PRINT 6) )
		)
		((= n 12)
			(MY-CASE 1 (1 'jeden) (2 'dwa) (3 'trzy) ('otherwise 'PLN))
		)
		((= n 13)
			(DOTIMES2D (i 3 j 2 t) (prin1 i) (prin1 j) )
		)
		((= n 141)
			(DO-NOT-PRIME (p 1 7)  (print (* p p)) )
		)
		((= n 142)
			(DO-IF (#'(lambda (X) (PRIMEP X)) p 1 7)  (print (* p p)) )
		)
		((= n 15)
			(setq tab (INIT2D 10 10))
			(FILL2D tab 5 #'(lambda (X) (PRIMEP X)))
			(PRINT2D tab)
		)
		((= n 211)
			(MKSTR ";" '(1 2) '#(3 4) 'abc "efg" '\g)
		)
		((= n 212)
			(MAKESTR ala ma 2 koty i 3 psy)
		)
		((= n 22)
			(MFIND-IF #'(lambda (X) (= X 5)) '(1 2 3 4 5 4) :from-end 't :start 1 :key nil)
		)
		((= n 23)
			(LICZBA 123.34)
		)
		((= n 241)
			(SPLIT-TYPE 'list '(1 2 #\b "def" 3 (4) "abc" (5)))
		)
		((= n 242)
			(SPLIT-TYPE 'list '((3 2 4) (5 (7 2 9) 2 8)))
		)
		((= n 243)
			(MMERGE 'list '(a1 d2 2 4 #\. "ala" " ") '#(b1 5 6 "ma" "kota")  #'string< :msort t)
		)
	)
)
